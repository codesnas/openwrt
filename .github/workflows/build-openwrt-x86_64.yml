#========================================================================================================================
# https://github.com/codesnas/openwrt
# Description: Automatically Build OpenWrt for X86_64
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
# Source code repository: https://github.com/immortalwrt/immortalwrt / Branch: master
#========================================================================================================================

name: Build OpenWrt for X86_64

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  FEEDS_CONF: router/x86_64/feeds.conf.default
  CONFIG_FILE: router/x86_64/config
  DIY_P1_SH: router/x86_64/diy-part1.sh
  DIY_P2_SH: router/x86_64/diy-part2.sh
  TZ: Etc/UTC

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q) 2>/dev/null
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android 2>/dev/null
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
        sudo -E systemctl daemon-reload
        #sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
        sudo rm -rf ~/{.cargo,.dotnet,.rustup}
        sudo -E timedatectl set-timezone "${TZ}"
        sudo -E apt-get install -y ntpdate
        sudo -E ntpdate pool.ntp.org
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Create simulated physical disk
      run: |
        mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
        root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
        sudo truncate -s "${mnt_size}"G /mnt/mnt.img
        sudo truncate -s "${root_size}"G /root.img
        sudo losetup /dev/loop6 /mnt/mnt.img
        sudo losetup /dev/loop7 /root.img
        sudo pvcreate /dev/loop6
        sudo pvcreate /dev/loop7
        sudo vgcreate github /dev/loop6 /dev/loop7
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/github/runner
        sudo mkdir -p /builder
        sudo mount /dev/github/runner /builder
        sudo chown -R runner.runner /builder
        df -Th

    - name: Clone source code
      working-directory: /builder
      id: codes
      run: |
        df -hT $PWD
        git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
        ln -sf /builder/openwrt ${GITHUB_WORKSPACE}/openwrt
        echo "build_tag=OpenWrt_x86_64_$(date +"%Y.%m.%d.%H%M")" >> ${GITHUB_OUTPUT}

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        # Backup OpenWrt rootfs and config files
        cd openwrt/
        [[ -d "output" ]] || mkdir output
        cp -f .config output/config
        # Backup apk files
        [[ -d "apk" ]] || mkdir -p apk
        find bin/packages/ -type f -name "*.apk" -exec cp -rf {} apk/ \;
        sudo tar -czf apk.tar.gz apk && cp -f apk.tar.gz output/
        cp -rf bin/targets/*/*/* output/

        # Clean up server space
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

        # Set output information
        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to release
      uses: ncipollo/release-action@main
      if: ${{ steps.organize.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: openwrt/output/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ### OpenWrt Image information
          - Default IP: 192.168.1.1
          - Default username: root
          - Default password: password
